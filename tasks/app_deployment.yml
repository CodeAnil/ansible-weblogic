---
- name: Check if AdminServer is already started
  shell: "pgrep -a java -u {{ oracle.user }} | egrep 'Dweblogic.Name=AdminServer.*weblogic.Server$'"
  register: check_adminserver
  ignore_errors: yes

- name: Execute AdminServer startup script
  shell: "nohup {{ oracle.middleware_dir }}/oracle_common/common/bin/wlst.sh {{ weblogic.scripts_dir }}/start-admin-server.py > {{ weblogic.logs_dir }}/start_AdminServer_base_domain_$(date +'%F').log 2>&1 &"
  when: check_adminserver.rc != 0

- name: Wait for AdminServer to startup
  wait_for:
    port: "{{ weblogic.adminserver_listen_port }}"
    delay: 4
    timeout: 30
  ignore_errors: yes

- name: create deploy_environment.py
  template:
    src: deploy_environment_py.j2 
    dest: "{{ weblogic.scripts_dir }}/deploy_environment.py"
    owner: "{{ oracle.user }}"
    group: "{{ oracle.group }}"
    mode: 0750
 
- name: copy deployment artifacts
  copy:
    src: app/sample.war
    dest: "{{ weblogic_domain_home }}/deploy/"
    owner: "{{ oracle.user }}"
    group: "{{ oracle.group }}"
    mode: 0750

- name: Deploy Application
  shell: "nohup {{ oracle.middleware_dir }}/oracle_common/common/bin/wlst.sh {{ weblogic.scripts_dir }}/deploy_environment.py > {{ weblogic.logs_dir }}/deploy_environment_base_domain_$(date +'%F').log 2>&1 &"
